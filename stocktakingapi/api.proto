syntax = "proto3";

package stocktakingapi;

service Backend {
    rpc AddModel(AddModelRequest) returns (AddModelResponse) {}
    rpc ListModels(ListModelsRequest) returns (ListModelsResponse) {}

    rpc AddItem(AddItemRequest) returns (AddItemResponse) {}
    rpc ListItems(ListItemsRequest) returns (ListItemsResponse) {}

    rpc ListOwners(ListOwnersRequest) returns (ListOwnersResponse) {}
}

message AddModelRequest {
  string name = 1;
  double price = 2;
  bytes photo = 3; // model photo picture bytes
}

message AddModelResponse {
  Error error = 1;
  string id = 2;
}

message ListModelsRequest {
  // nothing here.
}

message ListModelsResponse {
  message Result {
    string id = 1;
    string name = 2;
    double price = 3;
    string photo_url = 4;
  }

  Error error = 1;
  repeated Result results = 2;
}

message AddItemRequest {
  string model_id = 1;
  string owner_id = 2;
  string marker = 3;
}

message AddItemResponse {
  Error error = 1;
  string id = 2;
}

message ListItemsRequest {
  repeated string models = 1; // visible model IDs (can be empty to show all)
  repeated string owners = 2; // visible owner IDs (can be empty to show all)
}

message ListItemsResponse {
  message Result {
    string id = 1;
    string model_name = 2; // item model human-readable name
    double model_price = 3; // item model price
    string photo_url = 4; // item model photo URL
    string item_marker = 5; // item marker (e.g. license info)
  }

  Error error = 1;
  repeated Result results = 2;
}

message ListOwnersRequest {
  bool show_potential = 1; // when true, results also include users without items
}

message ListOwnersResponse {
  message Result {
    required string user_id = 1;
    required string name = 2; // full user name (e.g. Ivan Cukic)
    repeated string items = 3; // IDs of items owned by this user
  }

  Error error = 1;
  repeated Result results = 2;
}

message Error {
  string message = 1;
  int32 code = 2;
}
