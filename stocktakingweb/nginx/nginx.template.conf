# This config represents frontend for both mobile app and frontend
# It does the following:
#  1) handles static content from "stocktakingweb"
#  2) forwards GRPC traffic from "/stocktaking/" and "/labeling/" endpoints to "stocktakingbackend" service

# nginx docker image has user "nginx"
user nginx;

# Log errors to docker container logs
error_log stderr error;

events {
}

http {
    # Define MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Accelerate static with sendfile syscall
    sendfile on;

    # Define upstream for our backend
    upstream stocktakingbackend {
        server stocktakingbackend:8082;
    }

    log_format access_log_json escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
    '}';

    map $cookie_stocktoken $stocktoken_is_missing {
        default: '';
        ''  1;
    }

    # hostname.org serves
    server {
        server_name ${STOCK_DOMAIN} www.${STOCK_DOMAIN};

        # Include 'listen' directive from generated config
        include conf.d/listen.conf;

        charset utf-8;
        access_log /dev/stdout access_log_json;

        # Redirect to admin panel frontend
        location = / {
            return 301 /web;
        }

        # Serve admin panel frontend static files,
        #  route doesn't contain word 'admin' to mislead trivial vulnerability scanners.
        location /web {
            if ($stocktoken_is_missing) {
                # User should sing in to access web panel.
                rewrite ^ /authorizing/token;
            }
            root /stocktakingweb/www;
            try_files /index.html =404;
        }

        # Serve static files
        location / {
            root /stocktakingweb/www;
        }

        # Forward HTTP requests over /stocktaking endpoint to "stocktakingbackend"
        location /stocktaking/ {
            proxy_pass http://stocktakingbackend;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;

            # Pass token with "Grpc-Metadata-" prefix, so it's transformed into GRPC metadata,
            #  see https://grpc-ecosystem.github.io/grpc-gateway/docs/features.html
            proxy_set_header Grpc-Metadata-Token $cookie_stocktoken;
        }

        # Forward HTTP requests calls over /labeling endpoint to "stocktakingbackend"
        location /labeling/ {
            proxy_pass http://stocktakingbackend;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Token $cookie_stocktoken;
        }

        location = /authorizing/token {
            proxy_pass http://stocktakingbackend;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
